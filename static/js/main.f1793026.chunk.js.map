{"version":3,"sources":["Scheduling.js","Floor.js","Lift.js","App.js","index.js"],"names":["reqs","this","items","element","push","isEmpty","shift","length","str","i","sum","Floor","index","askLift","floor","enqueue","req","front","lift","document","getElementById","curpos","parseInt","getComputedStyle","bottom","nextpos","sec","Math","abs","timer","toString","console","log","setTimeout","style","transition","dequeue","Testing","className","id","onClick","Lift","App","useState","floors","setfloors","placeholder","onChange","e","target","value","type","min","disabled","href","rel","display","rows","addfloors","ReactDOM","render","StrictMode"],"mappings":"oRA2DIA,EAAO,I,WAvDV,aACC,oBACAC,KAAKC,MAAQ,G,2CAMX,SAAQC,GAGJF,KAAKC,MAAME,KAAKD,K,qBAKpB,WAKI,OAAGF,KAAKI,UACG,YACJJ,KAAKC,MAAMI,U,mBAKtB,WAII,OAAGL,KAAKI,UACG,uBACJJ,KAAKC,MAAM,K,qBAItB,WAGI,OAA6B,IAAtBD,KAAKC,MAAMK,S,wBAItB,WAGI,IADA,IAAIC,EAAM,GACFC,EAAI,EAAGA,EAAIR,KAAKC,MAAMK,OAAQE,IAClCD,GAAOP,KAAKC,MAAMO,GAAI,IAC1B,OAAOD,M,MAiBXE,EAAM,E,OC/BKC,EArCD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACVC,EAAU,SAACC,IDoEF,SAACA,GAGbd,EAAKe,QAAQD,GAcb,IAjBuB,iBAkBnB,IAAIE,EAAMhB,EAAKiB,QAGTC,EAAOC,SAASC,eAAe,QAC/BC,EAASC,SAASC,iBAAiBL,GAAMM,QACzCC,EAAU,KAAOT,EAAM,GAAiB,IAAXA,EAAM,GACnCU,EAAMC,KAAKC,IAAIP,EAASI,GAAW,IACnCI,GAAS,EAAIH,GAAKI,WAExBpB,GAAOgB,EACPK,QAAQC,IAAItB,GAGZuB,YAAW,WACPf,EAAKgB,MAAMV,OAASC,EAAU,KAC9BP,EAAKgB,MAAMC,WAAa,UAAYN,EAAQ,kBAE1C,IAAJnB,GAEFV,EAAKoC,YApBgB,IAAnBpC,EAAKK,WAAqB,IClF5BgC,CAAQvB,IAWf,OACC,sBAAKwB,UAAU,QAAQC,GAAI3B,EAA3B,UACC,sBAAK0B,UAAU,QAAf,UACC,wCAAW1B,KACX,wBACC0B,UAAU,gBACVE,QAAS,kBAAM3B,EAAQD,IAFxB,0BAMA,wBACC0B,UAAU,gBACVE,QAAS,kBAAM3B,EAAQD,IAFxB,6BAOD,qBAAK0B,UAAU,cCvBHG,G,YAVF,WACT,OACI,sBAAKF,GAAG,OAAR,UACI,sBAAMD,UAAU,eAChB,sBAAMA,UAAU,qBC4DbI,EA7DH,WACR,MAA4BC,mBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAsBH,OACC,sBAAKP,UAAU,MAAf,UACU,sBAAKA,UAAU,cAAf,UACI,mCACI,mDAIJ,sBAAKA,UAAU,uBAAf,UACI,uBACIA,UAAY,aACZQ,YAAc,0BACdC,SAjCC,SAACC,GAAD,OAAOH,EAAUG,EAAEC,OAAOC,QAkC3BC,KAAO,SACPC,IAAI,IACJC,UAAY,IAEhB,6BACI,mBACIC,KAAK,iDACLL,OAAO,SACPM,IAAI,aACJjB,UAAU,YAJd,iCAYrB,sBAAKA,UAAU,SAAf,UAjDmB,WACd,IAAMpB,EAAOC,SAASC,eAAe,QACrC,GAAGwB,EAAS,EAER,OADA1B,EAAKgB,MAAMsB,QAAU,OACd,qBAAKlB,UAAU,YAAf,SACH,8BACI,6DACA,yGACA,kFAMZ,IADA,IAAImB,EAAO,GACFhD,EAAIa,SAASsB,GAASnC,EAAI,IAAKA,EACpCgD,EAAKrD,KAAK,cAAC,EAAD,CAAOQ,MAAOH,GAAQA,IACpC,OAAOgD,EAkCEC,GACb,cAAC,EAAD,WCtDJC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAED1C,SAASC,eAAe,W","file":"static/js/main.f1793026.chunk.js","sourcesContent":["// Queue class\r\nclass Queue\r\n{\r\n\t// Array is used to implement a Queue\r\n\tconstructor()\r\n\t{\r\n\t\tthis.items = [];\r\n\t}\r\n\t\t\t\t\r\n\t// Functions to be implemented\r\n\t// enqueue(item)\r\n    // enqueue function\r\n    enqueue(element)\r\n    {\t\r\n        // adding element to the queue\r\n        this.items.push(element);\r\n    }\r\n\r\n\t// dequeue()\r\n    // dequeue function\r\n    dequeue()\r\n    {\r\n        // removing element from the queue\r\n        // returns underflow when called\r\n        // on empty queue\r\n        if(this.isEmpty())\r\n            return \"Underflow\";\r\n        return this.items.shift();\r\n    }\r\n\r\n\t// front()\r\n    // front function\r\n    front()\r\n    {\r\n        // returns the Front element of\r\n        // the queue without removing it.\r\n        if(this.isEmpty())\r\n            return \"No elements in Queue\";\r\n        return this.items[0];\r\n    }\r\n\r\n\t// isEmpty()\r\n    isEmpty()\r\n    {\r\n        // return true if the queue is empty.\r\n        return this.items.length === 0;\r\n    }\r\n\t// printQueue()\r\n    // printQueue function\r\n    printQueue()\r\n    {\r\n        var str = \"\";\r\n        for(var i = 0; i < this.items.length; i++)\r\n            str += this.items[i] +\" \";\r\n        return str;\r\n    }\r\n\r\n}\r\n\r\nvar reqs = new Queue();\r\n\t\t\t\r\n// Testing dequeue and pop on an empty queue\r\n// returns Underflow\r\n\r\n// reqs.enqueue(1000);\r\n// reqs.enqueue(2000);\r\n// reqs.enqueue(1500);\r\n// reqs.enqueue(2500);\r\n// reqs.enqueue(500);\r\n// reqs.enqueue(1200);\r\n\r\nlet sum = 0;\r\nconst Testing = (floor) => {\r\n    // console.log(floor);\r\n    // var reqs = new Queue();\r\n    reqs.enqueue(floor);\r\n    // console.log(reqs.front());\r\n\r\n\r\n    // const lift = document.getElementById(\"lift\");\r\n    // const curpos = parseInt(getComputedStyle(lift).bottom);\r\n    // const nextpos = 120 * (floor - 1) + (floor - 1) * 10;\r\n    // const sec = Math.abs(curpos - nextpos) / 120;\r\n    // const timer = (1 * sec).toString();\r\n\r\n    // lift.style.bottom = nextpos + \"px\";\r\n    // lift.style.transition = \"bottom \" + timer + \"s ease-in-out\";\r\n\r\n\r\n    while(reqs.isEmpty() === false){\r\n        let req = reqs.front();\r\n        // sum += req;\r\n\r\n        const lift = document.getElementById(\"lift\");\r\n        const curpos = parseInt(getComputedStyle(lift).bottom);\r\n        const nextpos = 120 * (req - 1) + (req - 1) * 10;\r\n        const sec = Math.abs(curpos - nextpos) / 120;\r\n        const timer = (1 * sec).toString();\r\n\r\n        sum += sec;\r\n        console.log(sum);\r\n\r\n        // if(req === 2500) reqs.enqueue(400);\r\n        setTimeout(function (){\r\n            lift.style.bottom = nextpos + \"px\";\r\n            lift.style.transition = \"bottom \" + timer + \"s ease-in-out\";\r\n            // reqs.dequeue();\r\n        },sum*300);\r\n        \r\n        reqs.dequeue();\r\n        // sum -= sec;\r\n    }\r\n}\r\n// testing();\r\n\r\n// module.exports = {testing}\r\n// export  Testing;\r\n\r\n\r\n// const testing = (floor) => {\r\n//     console.log(floor);\r\n//     var myq = new Queue();\r\n//     myq.enqueue(floor);\r\n//     console.log(myq.front());\r\n// }\r\n\r\nexport {Testing};","import \"./floor.css\";\r\nimport {Testing} from \"./Scheduling\"\r\n\r\nconst Floor = ({ index }) => {\r\n\tconst askLift = (floor) => {\r\n        // console.log(floor);\r\n        // Testing(floor);\r\n        Testing(floor);\r\n        // <Testing floor={floor} />\r\n\t\t// const lift = document.getElementById(\"lift\");\r\n\t\t// const curpos = parseInt(getComputedStyle(lift).bottom);\r\n\t\t// const nextpos = 120 * (floor - 1) + (floor - 1) * 10;\r\n\t\t// const sec = Math.abs(curpos - nextpos) / 120;\r\n\t\t// const timer = (1 * sec).toString();\r\n\r\n\t\t// lift.style.bottom = nextpos + \"px\";\r\n\t\t// lift.style.transition = \"bottom \" + timer + \"s ease-in-out\";\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"floor\" id={index}>\r\n\t\t\t<div className=\"panel\">\r\n\t\t\t\t<h2>Floor {index}</h2>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"panel__button\"\r\n\t\t\t\t\tonClick={() => askLift(index)}\r\n\t\t\t\t>\r\n\t\t\t\t\tðŸ”¼\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"panel__button\"\r\n\t\t\t\t\tonClick={() => askLift(index)}\r\n\t\t\t\t>\r\n\t\t\t\t\tðŸ”½\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"lifts\"></div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Floor;\r\n","import \"./lift.css\";\r\n\r\nconst Lift = () => {\r\n    return (\r\n        <div id=\"lift\">\r\n            <span className=\"lift__left\"></span>\r\n            <span className=\"lift__right\"></span>\r\n        </div>\r\n    )\r\n       \r\n}\r\n\r\nexport default Lift;","import Floor from \"./Floor\";\nimport {useState} from 'react';\nimport \"./app.css\";\nimport Lift from \"./Lift\";\n\nconst App = () => {\n    const [floors, setfloors] = useState(1);\n    const updateFloors = (e) => setfloors(e.target.value);\n\n    const addfloors = () => {\n        const lift = document.getElementById(\"lift\");\n        if(floors < 1){\n            lift.style.display = \"none\";\n            return <div className=\"no__floor\">\n                <p>\n                    <h1>Where the heck do you live?</h1>\n                    <h1>ðŸš§Please Refresh for now else lift won't show up!ðŸš§</h1>\n                    <h1>Or you can always take stairs! ðŸ˜‰</h1>\n                </p>\n            </div>;\n        }\n        //lift.style.display = \"\";\n        let rows = [];\n        for (let i = parseInt(floors); i > 0; --i)\n            rows.push(<Floor index={i} key={i}/>);\n        return rows;\n    }\n\n\treturn (\n\t\t<div className=\"App\">\n            <div className=\"app__header\">\n                <>\n                    <h1>\n                        Lift Simulation\n                    </h1>\n                </>\n                <div className=\"app__header__options\">\n                    <input\n                        className = 'app__input'\n                        placeholder = \"Floors in the building!\" \n                        onChange = {updateFloors} \n                        type = 'number'\n                        min='1'\n                        disabled = {false}\n                    />\n                    <h1>\n                        <a\n                            href=\"https://github.com/rahilkapoor/lift_simulation\" \n                            target=\"_blank\" \n                            rel=\"noreferrer\" \n                            className=\"app__link\"\n                        >\n                            GitHub Link\n                        </a>\n                    </h1>\n                </div>\n            </div>\n\t\t\t\n\t\t\t<div className=\"floors\">\n                {addfloors()}\n\t\t\t\t<Lift />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}